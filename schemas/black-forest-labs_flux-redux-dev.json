{
    "url": "https://replicate.com/black-forest-labs/flux-redux-dev",
    "owner": "black-forest-labs",
    "name": "flux-redux-dev",
    "description": "Open-weight image variation model. Create new versions while preserving key elements of your original.",
    "visibility": "public",
    "github_url": null,
    "paper_url": null,
    "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-dev",
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/daff59ba-540d-4111-a969-9119ee814f26/redux-cover.jpg",
    "default_example": {
        "id": "syf1t20h0hrmc0ck9x8rbdjybc",
        "model": "black-forest-labs/flux-redux-dev",
        "version": "df70f0bb7bb2e67417eebd79db0a9958c51c87d16cba6dc618903103b04ccd4c",
        "status": "succeeded",
        "input": {
            "guidance": 3,
            "megapixels": "1",
            "num_outputs": 1,
            "redux_image": "https://replicate.delivery/pbxt/M0mdz2nXiUmhpfLswjNdEHT3IhGtclUz7Q1sCw3XiHXzUugT/0_ZjYSm_q36J4KChdn.webp",
            "aspect_ratio": "4:3",
            "output_format": "webp",
            "output_quality": 80,
            "num_inference_steps": 28
        },
        "output": [
            "https://replicate.delivery/xezq/Oaex1FdP2ayjUSrbBrYA1WXnGJlu2ESnk71anWxs4OGWEo5JA/out-0.webp"
        ],
        "logs": "running bf16 model, fp8 disabled\nUsing seed: 61735\n0it [00:00, ?it/s]\n1it [00:00,  6.93it/s]\n2it [00:00,  4.80it/s]\n3it [00:00,  4.38it/s]\n4it [00:00,  4.18it/s]\n5it [00:01,  4.06it/s]\n6it [00:01,  4.02it/s]\n7it [00:01,  4.00it/s]\n8it [00:01,  3.97it/s]\n9it [00:02,  3.94it/s]\n10it [00:02,  3.93it/s]\n11it [00:02,  3.94it/s]\n12it [00:02,  3.93it/s]\n13it [00:03,  3.92it/s]\n14it [00:03,  3.92it/s]\n15it [00:03,  3.92it/s]\n16it [00:03,  3.92it/s]\n17it [00:04,  3.91it/s]\n18it [00:04,  3.92it/s]\n19it [00:04,  3.92it/s]\n20it [00:04,  3.91it/s]\n21it [00:05,  3.91it/s]\n22it [00:05,  3.91it/s]\n23it [00:05,  3.92it/s]\n24it [00:06,  3.92it/s]\n25it [00:06,  3.91it/s]\n26it [00:06,  3.92it/s]\n27it [00:06,  3.91it/s]\n28it [00:07,  3.91it/s]\n28it [00:07,  3.98it/s]\nTotal safe images: 1 out of 1",
        "error": null,
        "metrics": {
            "image_count": 1,
            "predict_time": 7.522483329,
            "total_time": 7.530364
        },
        "created_at": "2024-11-21T15:22:13.124000Z",
        "started_at": "2024-11-21T15:22:13.131880Z",
        "completed_at": "2024-11-21T15:22:20.654364Z",
        "urls": {
            "stream": "https://stream.replicate.com/v1/files/bcwr-oy3eifiybhx5ctwbbpkrx457d2pvmwzp47jsxxvfojeh6n4pu4fa",
            "get": "https://api.replicate.com/v1/predictions/syf1t20h0hrmc0ck9x8rbdjybc",
            "cancel": "https://api.replicate.com/v1/predictions/syf1t20h0hrmc0ck9x8rbdjybc/cancel"
        }
    },
    "latest_version": {
        "id": "0e522c0b709bd26a0727a7b7c38391e50cef5ef4016550c93fdd29a72d147981",
        "created_at": "2024-11-21T07:09:26.194976+00:00",
        "cog_version": "0.9.21",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "properties": {
                            "seed": {
                                "type": "integer",
                                "title": "Seed",
                                "x-order": 5,
                                "description": "Random seed. Set for reproducible generation"
                            },
                            "guidance": {
                                "type": "number",
                                "title": "Guidance",
                                "default": 3,
                                "maximum": 10,
                                "minimum": 0,
                                "x-order": 4,
                                "description": "Guidance for generated image"
                            },
                            "megapixels": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/megapixels"
                                    }
                                ],
                                "default": "1",
                                "x-order": 9,
                                "description": "Approximate number of megapixels for generated image"
                            },
                            "num_outputs": {
                                "type": "integer",
                                "title": "Num Outputs",
                                "default": 1,
                                "maximum": 4,
                                "minimum": 1,
                                "x-order": 2,
                                "description": "Number of outputs to generate"
                            },
                            "redux_image": {
                                "type": "string",
                                "title": "Redux Image",
                                "format": "uri",
                                "x-order": 0,
                                "description": "Input image to condition your output on. This replaces prompt for FLUX.1 Redux models"
                            },
                            "aspect_ratio": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/aspect_ratio"
                                    }
                                ],
                                "default": "1:1",
                                "x-order": 1,
                                "description": "Aspect ratio for the generated image"
                            },
                            "output_format": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/output_format"
                                    }
                                ],
                                "default": "webp",
                                "x-order": 6,
                                "description": "Format of the output images"
                            },
                            "output_quality": {
                                "type": "integer",
                                "title": "Output Quality",
                                "default": 80,
                                "maximum": 100,
                                "minimum": 0,
                                "x-order": 7,
                                "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs"
                            },
                            "num_inference_steps": {
                                "type": "integer",
                                "title": "Num Inference Steps",
                                "default": 28,
                                "maximum": 50,
                                "minimum": 1,
                                "x-order": 3,
                                "description": "Number of denoising steps. Recommended range is 28-50"
                            },
                            "disable_safety_checker": {
                                "type": "boolean",
                                "title": "Disable Safety Checker",
                                "default": false,
                                "x-order": 8,
                                "description": "Disable safety checker for generated images."
                            }
                        }
                    },
                    "Output": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "title": "Output"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "megapixels": {
                        "enum": [
                            "1",
                            "0.25"
                        ],
                        "type": "string",
                        "title": "megapixels",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "aspect_ratio": {
                        "enum": [
                            "1:1",
                            "16:9",
                            "21:9",
                            "3:2",
                            "2:3",
                            "4:5",
                            "5:4",
                            "3:4",
                            "4:3",
                            "9:16",
                            "9:21"
                        ],
                        "type": "string",
                        "title": "aspect_ratio",
                        "description": "An enumeration."
                    },
                    "output_format": {
                        "enum": [
                            "webp",
                            "jpg",
                            "png"
                        ],
                        "type": "string",
                        "title": "output_format",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}