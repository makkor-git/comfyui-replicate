{
    "url": "https://replicate.com/black-forest-labs/flux-1.1-pro-ultra",
    "owner": "black-forest-labs",
    "name": "flux-1.1-pro-ultra",
    "description": "FLUX1.1 [pro] in ultra and raw modes. Images are up to 4 megapixels. Use raw mode for realism.",
    "visibility": "public",
    "github_url": null,
    "paper_url": "https://blackforestlabs.ai/flux-1-1-ultra/",
    "license_url": "https://replicate.com/black-forest-labs/flux-pro#license",
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/8121c76b-fbff-41d9-834d-c70dea9d2191/flux-ultra-cover.jpg",
    "default_example": {
        "id": "dyq83qfxv9rg80ckcmbvpwv91r",
        "model": "black-forest-labs/flux-1.1-pro-ultra",
        "version": "hidden",
        "status": "succeeded",
        "input": {
            "raw": false,
            "prompt": "a majestic snow-capped mountain peak bathed in a warm glow of the setting sun",
            "aspect_ratio": "3:2",
            "output_format": "jpg",
            "safety_tolerance": 2,
            "image_prompt_strength": 0.1
        },
        "output": "https://replicate.delivery/czjl/jqtNvxYHcnLELpszvkVf0APhMkBnwzrdo205RaVB7MttqU6JA/tmppokfymld.jpg",
        "logs": "Running prediction... \nUsing seed: 14351\nGenerating image...\nGenerated image in 8.0sec\nDownloaded image in 0.13sec",
        "error": null,
        "metrics": {
            "image_count": 1,
            "predict_time": 8.132732037,
            "total_time": 8.141538
        },
        "created_at": "2024-11-25T20:51:31.418000Z",
        "started_at": "2024-11-25T20:51:31.426806Z",
        "completed_at": "2024-11-25T20:51:39.559538Z",
        "urls": {
            "stream": "https://stream.replicate.com/v1/files/fddq-iy2aaylhwyx75okovamhaia3wfv644cf2vkghgpwqqzls6246tzq",
            "get": "https://api.replicate.com/v1/predictions/dyq83qfxv9rg80ckcmbvpwv91r",
            "cancel": "https://api.replicate.com/v1/predictions/dyq83qfxv9rg80ckcmbvpwv91r/cancel"
        }
    },
    "latest_version": {
        "id": "c6e5086a542c99e7e523a83d3017654e8618fe64ef427c772a1def05bb599f0c",
        "created_at": "2025-03-31T12:46:38.338040+00:00",
        "cog_version": "0.14.3",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {},
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "required": [
                            "prompt"
                        ],
                        "properties": {
                            "raw": {
                                "type": "boolean",
                                "title": "Raw",
                                "default": false,
                                "x-order": 6,
                                "description": "Generate less processed, more natural-looking images"
                            },
                            "seed": {
                                "type": "integer",
                                "title": "Seed",
                                "x-order": 5,
                                "description": "Random seed. Set for reproducible generation"
                            },
                            "prompt": {
                                "type": "string",
                                "title": "Prompt",
                                "x-order": 0,
                                "description": "Text prompt for image generation"
                            },
                            "aspect_ratio": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/aspect_ratio"
                                    }
                                ],
                                "default": "1:1",
                                "x-order": 3,
                                "description": "Aspect ratio for the generated image"
                            },
                            "image_prompt": {
                                "type": "string",
                                "title": "Image Prompt",
                                "format": "uri",
                                "x-order": 1,
                                "description": "Image to use with Flux Redux. This is used together with the text prompt to guide the generation towards the composition of the image_prompt. Must be jpeg, png, gif, or webp."
                            },
                            "output_format": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/output_format"
                                    }
                                ],
                                "default": "jpg",
                                "x-order": 7,
                                "description": "Format of the output images."
                            },
                            "safety_tolerance": {
                                "type": "integer",
                                "title": "Safety Tolerance",
                                "default": 2,
                                "maximum": 6,
                                "minimum": 1,
                                "x-order": 4,
                                "description": "Safety tolerance, 1 is most strict and 6 is most permissive"
                            },
                            "image_prompt_strength": {
                                "type": "number",
                                "title": "Image Prompt Strength",
                                "default": 0.1,
                                "maximum": 1,
                                "minimum": 0,
                                "x-order": 2,
                                "description": "Blend between the prompt and the image prompt."
                            }
                        }
                    },
                    "Output": {
                        "type": "string",
                        "title": "Output",
                        "format": "uri"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "aspect_ratio": {
                        "enum": [
                            "21:9",
                            "16:9",
                            "3:2",
                            "4:3",
                            "5:4",
                            "1:1",
                            "4:5",
                            "3:4",
                            "2:3",
                            "9:16",
                            "9:21"
                        ],
                        "type": "string",
                        "title": "aspect_ratio",
                        "description": "An enumeration."
                    },
                    "output_format": {
                        "enum": [
                            "jpg",
                            "png"
                        ],
                        "type": "string",
                        "title": "output_format",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}